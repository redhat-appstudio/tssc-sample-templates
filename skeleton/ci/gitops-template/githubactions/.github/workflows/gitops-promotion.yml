# Generated from templates/gitops-template/gitops-promotion.yml.njk. Do not edit directly.

# üíÅ The Promotion Pipeline will:
# - Checkout your repository
# - Compute Promoted Images to Validate
# - Perform Image EC Validations 
# - Optionally update SBOMS

name: TSSC-Promotion-Pipeline
env:
  CI_TYPE: github

  # üñäÔ∏è EDIT to change the image registry settings.
  # Registries such as GHCR, Quay.io, and Docker Hub are supported.
  IMAGE_REGISTRY: ${{ secrets.IMAGE_REGISTRY }}
  IMAGE_REGISTRY_USER: ${{ secrets.IMAGE_REGISTRY_USER }}
  IMAGE_REGISTRY_PASSWORD: ${{ secrets.IMAGE_REGISTRY_PASSWORD }}

  ROX_CENTRAL_ENDPOINT: ${{ secrets.ROX_CENTRAL_ENDPOINT }}
  ROX_API_TOKEN: ${{ secrets.ROX_API_TOKEN }}

  QUAY_IO_CREDS_USR: ${{ secrets.QUAY_IO_CREDS_USR }}
  QUAY_IO_CREDS_PSW: ${{ secrets.QUAY_IO_CREDS_PSW }}
  COSIGN_SECRET_PASSWORD: ${{ secrets.COSIGN_SECRET_PASSWORD }}
  COSIGN_SECRET_KEY: ${{ secrets.COSIGN_SECRET_KEY }}
  COSIGN_PUBLIC_KEY: ${{ secrets.COSIGN_PUBLIC_KEY }}
  GITOPS_AUTH_PASSWORD: ${{ secrets.GITOPS_AUTH_PASSWORD }}

  # üñäÔ∏è EDIT to specify custom tags for the container image, or default tags will be generated below.
  IMAGE_TAGS: ""
  IMAGE_TAG: ""
  DEFAULT_UPDATE_VIA_PUSH: "true"
  # üñäÔ∏è EDIT to set a name for your OpenShift app, or a default one will be generated below.
  APP_NAME: ""
on: [pull_request, workflow_dispatch]

jobs:
  tssc-ci-cd:
    name: Build and send Image Update PR
    # ubuntu-20.04 can also be used.
    runs-on: ubuntu-24.04
    environment: production

    steps:
    - name: Check for required secrets
      uses: actions/github-script@v6
      with:
        script: |
          const secrets = {
            IMAGE_REGISTRY: `${{ secrets.IMAGE_REGISTRY }}`,
            IMAGE_REGISTRY_USER: `${{ secrets.IMAGE_REGISTRY_USER }}`,
            IMAGE_REGISTRY_PASSWORD: `${{ secrets.IMAGE_REGISTRY_PASSWORD }}`,

            ROX_CENTRAL_ENDPOINT: `${{ secrets.ROX_CENTRAL_ENDPOINT }}`,
            ROX_API_TOKEN: `${{ secrets.ROX_API_TOKEN }}`,

            QUAY_IO_CREDS_USR: `${{ secrets.QUAY_IO_CREDS_USR }}`,
            QUAY_IO_CREDS_PSW: `${{ secrets.QUAY_IO_CREDS_PSW }}`,

            COSIGN_SECRET_PASSWORD: `${{ secrets.COSIGN_SECRET_PASSWORD }}`,
            COSIGN_SECRET_KEY: `${{ secrets.COSIGN_SECRET_KEY }}`,
            COSIGN_PUBLIC_KEY: `${{ secrets.COSIGN_PUBLIC_KEY }}`,

            GITOPS_AUTH_PASSWORD: `${{ secrets.GITOPS_AUTH_PASSWORD }}`,

          };
          const missingSecrets = Object.entries(secrets).filter(([ name, value ]) => {
            if (value.length === 0) {
              core.error(`Secret "${name}" is not set`);
              return true;
            }
            core.info(`‚úîÔ∏è Secret "${name}" is set`);
            return false;
          });
          if (missingSecrets.length > 0) {
            core.setFailed(`‚ùå At least one required secret is not set in the repository. \n` +
              "You can add it using:\n" +
              "GitHub UI: https://docs.github.com/en/actions/reference/encrypted-secrets#creating-encrypted-secrets-for-a-repository \n" +
              "GitHub CLI: https://cli.github.com/manual/gh_secret_set \n" +
              "Also, refer to https://github.com/redhat-actions/oc-login#getting-started-with-the-action-or-see-example");
          }
          else {
            core.info(`‚úÖ All the required secrets are set`);
          }
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: '2'
    - name: Pre-init
      run: | 
        echo "Using quay.io/redhat-appstudio/dance-bootstrap-app:rhtap-runner"
        mkdir -p out
        docker run -v $(pwd)/out:/out quay.io/redhat-appstudio/dance-bootstrap-app:rhtap-runner bash /work/copy-scripts.sh
        tree out 
        sudo chmod +x out/binaries/*
        sudo mv out/binaries/* /usr/bin
        cp out/rhtap/* rhtap
        cat  rhtap/env.sh 
        syft --version
        cosign version
        buildah --version
        ec version
    - name: Verify Ec
      run: |
        echo "Verify Ec"
        bash rhtap/gather-deploy-images.sh
        bash rhtap/verify-enterprise-contract.sh
    - name: Upload Sbom
      run: |
        echo "Upload Sbom"
        bash rhtap/gather-images-to-upload-sbom.sh
        bash rhtap/download-sbom-from-url-in-attestation.sh
    - name: Done
      run: |
        echo "Done"
